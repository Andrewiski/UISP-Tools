version: '3.7'

services:
  uisptools_dev:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        # [Choice] Node.js version: 16, 14, 12
        VARIANT: 16
        # On Linux, you may need to update USER_UID and USER_GID below if not your local UID is not 1000.
        USER_UID: 1000
        USER_GID: 1000

    volumes:
      - ..:/workspace:cached
    container_name: uisptools_dev
    environment:
      MONGODBSERVERURL: "mongodb://uisptools:U!spT00ls!@uisptools_mongodb_dev:27017/"
    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    #network_mode: service:db

    # Uncomment the next line to use a non-root user for all processes.
    # user: node

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)
    depends_on:
      - uisptools_mongodb_dev
   
    ports:
      - "46443:49443"
      - "46080:49080"
    networks:
      - express-mongo
  
  uisptools_mongodb_dev:
    image: mongo:latest
    container_name: uisptools_mongodb_dev
    restart: unless-stopped
    volumes:
      - mongodb-data:/data/db
      - ../mongodb/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: "uisptools"
      MONGO_INITDB_ROOT_PASSWORD: "U!spT00ls!"
      MONGO_INITDB_DATABASE: "uisptools"
    # Add "forwardPorts": ["27017"] to **devcontainer.json** to forward MongoDB locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)
    ports:
      - "46017:27017"
    networks:
      - express-mongo
volumes:
  mongodb-data:
  
networks:
  express-mongo:
